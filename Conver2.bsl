	
Процедура КонвертироватьТекстИзMarkdownВHtml(Текст)	
	
	ВыделитьБлокТекста(Текст, "**", "<strong>", "</strong>");
	ВыделитьБлокТекста(Текст, "*", "<em>", "</em>");
	ВыделитьБлокЦитаты(Текст);

КонецПроцедуры // КонвертироватьТекстИзMarkdownВHtml()

Процедура ВыделитьБлокТекста(Текст, ПодстрокаПоиска, ТегНачала, ТегОкончания)	
	
	// Выделяемый блок должен быть обрамлен спец символами **Блок** или *Блок* 
	// без прабелов между символами и блоком

	ДлинаТекста    = СтрДлина(Текст);
	ДлинаПодстроки = СтрДлина(ПодстрокаПоиска);
	
	НачалоБлока = Найти(Текст, ПодстрокаПоиска);
	
	Если Не НачалоБлока = 0 И ДлинаТекста > НачалоБлока + ДлинаПодстроки Тогда
		Если Не ПодстрокаПоиска + " " = Сред(Текст, НачалоБлока, ДлинаПодстроки + 1) Тогда
			
			ПродолжениеТекста = Прав(Текст, ДлинаТекста - НачалоБлока - ДлинаПодстроки + 1);

			КонецБлока = Найти(ПродолжениеТекста, ПодстрокаПоиска);
			Если Не КонецБлока = 0 
				И Не Сред(ПродолжениеТекста, КонецБлока - 1, ДлинаПодстроки + 1) = " " + ПодстрокаПоиска  Тогда
				
				Текст = Лев(Текст, НачалоБлока - 1) + ТегНачала 
					+ Лев(ПродолжениеТекста, КонецБлока - 1)
					+ ТегОкончания + Прав(ПродолжениеТекста, СтрДлина(ПродолжениеТекста) - КонецБлока - ДлинаПодстроки + 1);

					ВыделитьБлокТекста(Текст, ПодстрокаПоиска, ТегНачала, ТегОкончания);

			КонецЕсли;

		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ВыделитьБлокТекста()

Процедура ВыделитьБлокЦитаты(Текст)
	
	НачалоЦитаты = Найти(Текст, "> ");
	Если НачалоЦитаты = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КонецБлокаЦитаты = КонецТекущегоБлокаТекста(Текст, НачалоЦитаты + 2);
	
	СледующийБлок = "";
	Если Не СтрДлина(Текст) = НачалоЦитаты + КонецБлокаЦитаты + 1 Тогда
		
		// Проверяем что текст не закончился
		СледующийБлок = Прав(Текст, СтрДлина(Текст) - НачалоЦитаты - КонецБлокаЦитаты);

	КонецЕсли;

	Текст = Лев(Текст, НачалоЦитаты - 1) 
		+ "<blockquote>" + СокрЛП(Сред(Текст, НачалоЦитаты + 2, КонецБлокаЦитаты)) + "</blockquote>"
		+ СледующийБлок;

	Если Не Найти(Текст, "> ") = 0 Тогда
		ВыделитьБлокЦитаты(Текст);
	КонецЕсли;

КонецПроцедуры

Функция КонецТекущегоБлокаТекста(Текст, НачалоБлока)
	
	ДлинаБлока    = 0;
	КонтекстБлока = Прав(Текст, СтрДлина(Текст) - НачалоБлока + 1);
	
	СтрокаБлока = СледующаяСтрокаТекста(Текст, НачалоБлока);
	Пока Не ЭтоПустаяСтрока(СтрокаБлока) Цикл
		
		ДлинаБлока  = ДлинаБлока + СтрДлина(СтрокаБлока);
		СтрокаБлока = СледующаяСтрокаТекста(КонтекстБлока, ДлинаБлока + 1);

	КонецЦикла;

	Возврат ДлинаБлока;

КонецФункции // КонецТекущегоБлокаТекста(Текст, НачалоБлока)

////// Служебные процедуры

// Строка не должна начинаться с символа перенос строки
Функция СледующаяСтрокаТекста(Текст, НачалоСтроки)
	
	ТекущийБлок = Прав(Текст, СтрДлина(Текст) - НачалоСтроки + 1);
	ДлинаТекущегоБлока = СтрДлина(ТекущийБлок);
	
	КонецТекущейСтроки = Найти(ТекущийБлок, Символ(10));
	Если КонецТекущейСтроки = 0 Или КонецТекущейСтроки = ДлинаТекущегоБлока Тогда
		
		// Блок заканчивается в конце всего текста
		Возврат ТекущийБлок;

	Иначе
		
		// Сообщить(Лев(ТекущийБлок, КонецТекущейСтроки));
		Возврат Лев(ТекущийБлок, КонецТекущейСтроки);

	КонецЕсли;

КонецФункции // СледующаяСтрокаТекста(Текст, НачалоСтроки)

Функция ЭтоПустаяСтрока(СтрокаТекста)
	
	Если ПустаяСтрока(СокрЛП(СтрокаТекста)) Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;

КонецФункции // ЭтоПустаяСтрока(СледующаяСтрокаТекста)

ТекстИсходник = 
"> Параграф
|это тоже текст цитаты
|
|> Это новая цитата"; 

// Сообщить(ТекстИсходник);

КонвертироватьТекстИзMarkdownВHtml(ТекстИсходник);
 Сообщить(ТекстИсходник);




